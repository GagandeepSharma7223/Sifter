@model List<string>

<div class="row">
    <div class="col-12">
        <div class="row pl-3">
            <div class="col-7 col-md-6 col-sm-10">
                <form id="form-common-search">
                    <div class="form-group">
                        @(Html.TextBox("SearchQuery", string.Empty, new
                            {
                                @class = "k-textbox",
                                style = "width:100%",
                                @placeholder = "Enter Search Query or Use fields below"
                            }))
                    </div>
                    <div class="text-center form-group">
                        <button type="submit" class="k-button k-primary mr-4 btn-primary">Search Now</button>
                        <button type="button" id="clear-search-btn" class="k-button k-primary">Clear All</button>
                    </div>
                </form>
            </div>
            <div class="col-4 col-md-4 col-sm-10">
                <div class="form-group">
                    @(Html.Kendo().DropDownList()
                          .Name("SavedSearchDD")
                          .DataValueField("SavedSearchId")
                          .DataTextField("Name")
                          .Filter(FilterType.Contains)
                          .Height(200)
                          .OptionLabel("Select")
                          .HtmlAttributes(new { style = "width:100%" })
                          .DataSource(source =>
                          {
                              source.Custom()
                                    .ServerFiltering(true)
                                    .ServerPaging(true)
                                    .Type("aspnetmvc-ajax")
                                    .Transport(transport =>
                                    {
                                        transport.Read("GetSavedSearchOptions", "Grid");
                                    })
                                    .Schema(schema =>
                                    {
                                        schema
                                        .Model(model =>
                                        {
                                            model.Id("SavedSearchId");
                                            model.Field("Name", typeof(string));
                                            model.Field("SearchString", typeof(string));
                                        })
                                        .Data("Data")
                                              .Total("Total");
                                    });
                          })
                    .Events(evt => evt.Select("onSavedSearchSelection"))
                    )

                </div>
                <div class="text-center form-group">
                    <button id="save-search-search-btn" type="button" class="k-button k-primary btn-primary">Save This Search</button>
                </div>
            </div>
        </div>
        <div class="row pl-3">
            <div class="col-12">
                <label class="mr-4">Show: </label>
                <div class="form-check-inline btn-group">
                    <label class="form-check-label">
                        <input type="radio" class="form-check-input" checked="checked" value="basic" name="optradio">Basic Fields
                    </label>
                </div>
                <div class="form-check-inline btn-group">
                    <label class="form-check-label">
                        <input type="radio" class="form-check-input" value="all" name="optradio">All Fields
                    </label>
                </div>
            </div>
        </div>
        <div class="row pl-3 form-group">
            <div class="col-12">
                <footer>Note: You can add criteria from any of these 3 tables.</footer>
                <label class="font-13">Jump To: </label>
                <div class="btn-group mr-2" role="group" aria-label="First group">
                    <a href="#author-block" class="btn btn-link font-13">Author Fields</a>
                </div>
                <div class="btn-group mr-2" role="group" aria-label="Second group">
                    <a href="#work-block" class="btn btn-link font-13">Work Fields</a>
                </div>
                <div class="btn-group" role="group" aria-label="Third group">
                    <a href="#element-block" class="btn btn-link font-13">Element Fields</a>
                </div>
            </div>
        </div>
        <form id="form-field-search">
            <div id="author-block" class="row search-block-body">
                <div class="col-12">
                    <h5 class="pl-3">Author Fields</h5>
                    @await Component.InvokeAsync("SearchForm", new { type = "vAuthor" })
                </div>
            </div>
            <div id="work-block" class="row search-block-body">
                <div class="col-12">
                    <h5 class="pl-3">Work Fields</h5>
                    @await Component.InvokeAsync("SearchForm", new { type = "vWork" })
                </div>
            </div>
            <div id="element-block" class="row search-block-body">
                <div class="col-12">
                    <h5 class="pl-3">Element Fields</h5>
                    @await Component.InvokeAsync("SearchForm", new { type = "vElement" })
                </div>
            </div>
            <div class="text-center col-6 mb-5">
                <button type="submit" class="k-button k-primary btn-primary">Search Now</button>
            </div>
        </form>
        @(Html.Hidden("basicSearchColumns", string.Join(",", Model)))
    </div>
</div>

<script>
    $(":radio[value=" + selectedSearchOption + "]").attr('checked', 'checked');
    $(function () {
        hideLoading();
        resizeTabStrip();
        resizeSearchSplitter();
        $('#author-block').removeClass('d-none');
        var container = $("#saveSearchForm");
        kendo.init(container);
        container.kendoValidator({
            rules: {
                duplicate: function (input) {
                    if (input.is("[data-duplicate-name]") && input.val() != "") {
                        var dropdownList = $('#SavedSearchDD').data("kendoDropDownList");
                        var existingNames = dropdownList.dataSource.data().map(x => x.Name);
                        return existingNames.findIndex(x => x.trim().toLowerCase() === input.val().trim().toLowerCase()) < 0;
                    }
                    return true;
                }
            },
            messages: {
                duplicate: "Search Name already exists."
            }
        });
        $('.frm-row').addClass('d-none');
        var searchColumns = $('#basicSearchColumns').val().split(',');
        searchColumns.forEach(function (value) {
            $('.' + value).removeClass('d-none');
        })
        $("input[name='optradio']").change(function (e) {
            $('.frm-row').addClass('d-none');
            if ($(this).val() == 'basic') {
                searchColumns.forEach(function (value) {
                    $('.' + value).removeClass('d-none');
                })
            } else {
                $('.frm-row').removeClass('d-none');
            }
        });
    });
</script>